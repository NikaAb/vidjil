
This changelog concerns the algorithmic part (C++) of Vidjil.

2015-02-XX  The Vidjil Team
	* Better multi-germline analysis (-g), returning the best locus for each read (core/segment.cpp)
	  The incomplete rearrangement analysis (-i) can now safely be used.
	  The speed of this multi-germline analysis will be improved in a next release.
	* Faster representative computation (core/read_chooser.cpp)
	* Included tools (tools/*.py) to process .vidjil files
	* New statistics on the number of clones (core/germline.cpp)
	* New experimental CDR3 detection (-3). We still advise to use IMGT/V-QUEST for better and complete results.
	* Better debug option -u (.affect), especially in the case of multi-germline analysis
	* Refactored dynamic programming computations (core/dynprog.cpp), experimental affine gaps
	* Removed unused code parts as well as some files
	* Streamlined flag processing in Makefiles
	* New mechanism for some functional tests (make shouldvdj)
	* New and updated unit and functional tests

2015-01-31  The Vidjil Team
	* Better TRG and TRD+ parameters (-g). The multi-germline analysis will again be improved in a next release.
	* New experimental option (-I) to discard common kmers between different germlines (core/germline.cpp)
	* Updated outputs for better traceability (version in .json, germlines on stdout)
	* New mechanism to retrieve germline databases (germline/get-saved-germline)

2014-12-22  The Vidjil Team
	* Better multi-germline analysis (-g). This will again be improved in a next release.
	* New experimental incomplete rearrangement analysis (-i)
	* New and updated unit and functional tests
	* Bugs closed (-w 40 when no D germline)

2014-11-28  The Vidjil Team
	* New input method, now accepts compressed fasta files with gzip (core/fasta.cpp, gzstream/zlib)
	* Better multi-germline analysis (-g) and documentation. This analysis can now safely be used.
	* Streamlined input. Option -d is removed, and a germline is required (-V/(-D)/-J, or -G, or -g)
	* Removed unused code parts as well as some files
	* New and updated unit and functional tests - now more than 80% code coverage
	* New public continuous integration - travis, coveralls
	* Bugs closed (-l, large -r)

2014-10-22  The Vidjil Team
	* Streamlined filtering options (-r/-y/-z), better documented (doc/algo.org)
	* Streamlined output files, option to fix their basename (-b)
	* Updated .data .json output, now in the better documented 2014.10 format (doc/format-analysis.org)
	* New experimental multi-germline analysis (-g). This will be improved and documented in a next release.
	* Faster FineSegmenter with a better memory allocation (core/dynprog.cpp)
	* Refactored main vidjil.cpp, objects storing germlines and statistics (core/germline.cpp, core/stats.cpp)
	* Transferred clustering from clone output to information in .data, again simplifying vidjil.cpp
	* Removed unused code parts as well as some files
	* New and updated unit and functional tests
	* Bugs closed

2014-09-23  The Vidjil Team
	* Export cause of non-segmentation in the .data
	* New option to output segmented reads (-U), now by default segmented reads are not output one by one
	* Updated .data .json output (the format will change again in a next release)
	* Updated tests

2014-07-28  The Vidjil Team
	* Better heuristic, segment more reads (core/affectanalyser.h, core/segment.cpp)
	  This improved heuristic was designed to implement a multi-germline analysis in a next release.
	* Improved computation of the heuristic affectation. Halves the time of -c windows (core/kmerstore.h)
	* New command '-c germlines', discovering germlines (vidjil.cpp)
	* New unit tests, updated some tests
	* Updated .json output (experimental distance graph)
	* Bugs closed

2014-03-27  The Vidjil Team
	* Better default seed selection, depending on the germline, segments more reads (vidjil.cpp)
	* Better selection of representative read (core/representative.cpp)
	* New option to output all clones (-A), for testing purposes
	* Updated debug option (-u) to display k-mer affection (core/windowExtractor.cpp)
	* New unit tests, updated some tests
	* Improved management of dependencies (Makefile)
	* Improved documentation and comments on main stdout

2014-02-20  The Vidjil Team
	* Refactored main vidjil.cpp (core/windows.cpp, core/windowExtractor.cpp)
	* Removed unused html output
	* Better json output (core/json.cpp)
	* Updated main stdout, with representative sequence for each clone
	* Updated parameters for FineSegmenter (delta_max) and dynprog (substition cost)
	* Bugs closed

2013-10-07  The Vidjil Team
	* Better heuristic, segments more reads (core/segment.cpp)
        * Better and faster selection of representative read (vidjil.cpp, core/read_chooser.cpp)
        * Better display of reason of non-segmenting reads
        * New normalization against a standard (-Z) (core/labels.cpp)
        * New experimental lazy_msa multiple aligner
        * New .json output
        * New unit tests
        * Bugs closed

2013-07-03  The Vidjil Team
	* New selection of representative read (core/read_chooser.cpp)
	* Faster spaced seed computation (core/tools.cpp)
	* New unit tests
	* Bugs closed

2013-04-18  The Vidjil Team
	* First public release


